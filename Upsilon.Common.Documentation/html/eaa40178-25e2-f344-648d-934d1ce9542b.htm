<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="Microsoft.Help.SelfBranded" content="true" />
    <meta name="Language" content="en-us" />
    <meta name="Microsoft.Help.Locale" content="en-us" />
    <meta name="Microsoft.Help.TopicLocale" content="en-us" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"></script>
    <title>YArgumentParser Methods</title>
    <meta name="Title" content="YArgumentParser Methods" />
    <meta name="Microsoft.Help.Id" content="Methods.T:Upsilon.Common.Library.YArgumentParser" />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="System.Keywords" content="YArgumentParser class, methods" />
    <meta name="container" content="Upsilon.Common.Library" />
    <meta name="file" content="eaa40178-25e2-f344-648d-934d1ce9542b" />
    <meta name="guid" content="eaa40178-25e2-f344-648d-934d1ce9542b" />
    <meta name="Microsoft.Help.Category" content="CSharp" />
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="SetDefaultLanguage('cs');">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div id="PageHeader" class="pageHeader">Upsilon Ecosystem Documentation<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/ebdfcab0-1f5d-e0bd-d545-12c35e9a69cd.htm" title="Upsilon Ecosystem Documentation" tocid="roottoc">Upsilon Ecosystem Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/ebdfcab0-1f5d-e0bd-d545-12c35e9a69cd.htm" title="Upsilon Ecosystem" tocid="ebdfcab0-1f5d-e0bd-d545-12c35e9a69cd">Upsilon Ecosystem</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/d5af3b36-2b58-62a2-cdc7-35f92a837cae.htm" title="Upsilon.Common.Library" tocid="d5af3b36-2b58-62a2-cdc7-35f92a837cae">Upsilon.Common.Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/f128f663-181c-2ce8-79e1-ce4c6a40fc6a.htm" title="YArgumentParser Class" tocid="f128f663-181c-2ce8-79e1-ce4c6a40fc6a">YArgumentParser Class</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/eaa40178-25e2-f344-648d-934d1ce9542b.htm" title="YArgumentParser Methods" tocid="eaa40178-25e2-f344-648d-934d1ce9542b">YArgumentParser Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/49b8713e-61d3-c30e-20c2-e959431a83ab.htm" title="ArgumentIsSet Method" tocid="49b8713e-61d3-c30e-20c2-e959431a83ab">ArgumentIsSet Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/68dbd579-b51d-e7e4-4ccc-b8ab211acd37.htm" title="GetArgument Method" tocid="68dbd579-b51d-e7e4-4ccc-b8ab211acd37">GetArgument Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/01f914d5-c63c-caea-3d5e-9cb386efec18.htm" title="GetMainArgument Method" tocid="01f914d5-c63c-caea-3d5e-9cb386efec18">GetMainArgument Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/6a98208a-e6e0-78a6-68be-111c4aff3ad4.htm" title="HasArgument Method" tocid="6a98208a-e6e0-78a6-68be-111c4aff3ad4">HasArgument Method</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">
              <h1>YArgument<wbr />Parser Methods</h1>
            </td>
          </tr>
        </table>
        <p>The <a href="f128f663-181c-2ce8-79e1-ce4c6a40fc6a.htm">YArgumentParser</a> type exposes the following members.</p>
        <div class="collapsibleAreaRegion">
          <span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCDA')" onkeypress="SectionExpandCollapse_CheckKey('IDCDA', event)" tabindex="0">
            <img id="IDCDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span>
        </div>
        <div id="IDCDASection" class="collapsibleSection">
          <table id="MethodList" class="members">
            <tr>
              <th class="iconColumn"> </th>
              <th>Name</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>
                <img src="../icons/pubMethod.gif" alt="Public method" title="Public method" />
                <img src="../icons/CodeExample.png" alt="Code example" title="Code example" />
              </td>
              <td>
                <a href="60e6b740-d3d4-211a-2b5f-896304e42c93.htm">ArgumentIsSet(String)</a>
              </td>
              <td>
            Check if the <span class="parameter">argName</span> is set as a boolean.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDIBGDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDIBGDA', event)" tabindex="0"><img id="IDDIBGDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDDIBGDASection" class="collapsibleSection"><div id="IDADIBGDA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADIBGDA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADIBGDA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADIBGDA');return false;" title="Copy">Copy</a></div></div><div id="IDADIBGDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});</pre></div></div></div>
            In results :
            <ul><li><span class="code">argumentParser.ArgumentIsSet(string.Empty)</span> will return <span class="code">false</span> because the main argument cannot be set as boolean</li><li><span class="code">argumentParser.ArgumentIsSet("s")</span> will return <span class="code">false</span> because this argument is not set as boolean</li><li><span class="code">argumentParser.ArgumentIsSet("readonly")</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.ArgumentIsSet("override")</span> will return <span class="code">false</span></li></ul></div></td>
            </tr>
            <tr>
              <td>
                <img src="../icons/pubMethod.gif" alt="Public method" title="Public method" />
                <img src="../icons/CodeExample.png" alt="Code example" title="Code example" />
              </td>
              <td>
                <a href="39a3e157-68f9-a661-15d8-c3efe1bb724b.htm">ArgumentIsSet<span id="LST7802D839_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST7802D839_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(T)</a>
              </td>
              <td>
            Check if the <span class="parameter">argName</span> is set as a boolean.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDJAGDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDJAGDA', event)" tabindex="0"><img id="IDDJAGDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDDJAGDASection" class="collapsibleSection"><div id="IDADJAGDA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADJAGDA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADJAGDA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADJAGDA');return false;" title="Copy">Copy</a></div></div><div id="IDADJAGDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">enum</span> ArumentsTypes
{
    main = <span class="highlight-number">0</span>,
    s,
    m,
    <span class="highlight-keyword">readonly</span>,
}
YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});</pre></div></div></div>
            In results :
            <ul><li><span class="code">argumentParser.ArgumentIsSet(ArumentsTypes.main)</span> will return <span class="code">false</span> because the main argument cannot be set as boolean</li><li><span class="code">argumentParser.ArgumentIsSet(ArumentsTypes.s)</span> will return <span class="code">false</span> because this argument is not set as boolean</li><li><span class="code">argumentParser.ArgumentIsSet(ArumentsTypes.readonly)</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.ArgumentIsSet(ArumentsTypes.m)</span> will return <span class="code">false</span></li></ul></div></td>
            </tr>
            <tr>
              <td>
                <img src="../icons/pubMethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <span class="noLink">Equals</span>
              </td>
              <td>Determines whether the specified object is equal to the current object.<br />(Inherited from <span class="noLink">Object</span>)</td>
            </tr>
            <tr>
              <td>
                <img src="../icons/pubMethod.gif" alt="Public method" title="Public method" />
                <img src="../icons/CodeExample.png" alt="Code example" title="Code example" />
              </td>
              <td>
                <a href="8b781379-64e2-cefd-1ca2-da6c53c55682.htm">GetArgument(String)</a>
              </td>
              <td>
            Get a <span class="code"><a href="a137e4a8-1b7e-1e57-beed-730b64840040.htm">YArgument</a></span> from the <span class="parameter">argName</span> or <span class="code">null</span> if the given param is not found.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDHIBHDA')" onkeypress="SectionExpandCollapse_CheckKey('IDHIBHDA', event)" tabindex="0"><img id="IDHIBHDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDHIBHDASection" class="collapsibleSection"><div id="IDAHIBHDA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAHIBHDA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAHIBHDA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAHIBHDA');return false;" title="Copy">Copy</a></div></div><div id="IDAHIBHDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});
YArgument argument = argumentParser.GetArgument(<span class="highlight-literal">"s"</span>);
YArgument mainArgument = argumentParser.GetArgument(<span class="highlight-keyword">string</span>.Empty);
YArgument nullArgument = argumentParser.GetArgument(<span class="highlight-literal">"m"</span>);</pre></div></div></div>
            In results :
            <ul><li><span class="code">argument.Values</span> will be <span class="code">{ "source" }</span></li><li><span class="code">mainArgument.Values</span> will be <span class="code">{ "First value of the main argument", "Second value of the main argument"}</span></li><li><span class="code">nullArgument</span> will be <span class="code">null</span></li></ul></div></td>
            </tr>
            <tr>
              <td>
                <img src="../icons/pubMethod.gif" alt="Public method" title="Public method" />
                <img src="../icons/CodeExample.png" alt="Code example" title="Code example" />
              </td>
              <td>
                <a href="ee8e8af0-9a6d-5ced-37b2-9eb172ef64af.htm">GetArgument<span id="LST7802D839_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST7802D839_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(T)</a>
              </td>
              <td>
            Get a <span class="code"><a href="a137e4a8-1b7e-1e57-beed-730b64840040.htm">YArgument</a></span> from the <span class="parameter">argName</span> or <span class="code">null</span> if the given param is not found.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDHJAHDA')" onkeypress="SectionExpandCollapse_CheckKey('IDHJAHDA', event)" tabindex="0"><img id="IDHJAHDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDHJAHDASection" class="collapsibleSection"><div id="IDAHJAHDA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAHJAHDA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAHJAHDA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAHJAHDA');return false;" title="Copy">Copy</a></div></div><div id="IDAHJAHDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">enum</span> ArumentsTypes
{
    main = <span class="highlight-number">0</span>,
    s,
    m,
    <span class="highlight-keyword">readonly</span>,
}
YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});
YArgument argument = argumentParser.GetArgument(ArumentsTypes.s);
YArgument mainArgument = argumentParser.GetArgument(ArumentsTypes.main);
YArgument nullArgument = argumentParser.GetArgument(ArumentsTypes.m);</pre></div></div></div>
            In results :
            <ul><li><span class="code">argument.Values</span> will be <span class="code">{ "source" }</span></li><li><span class="code">mainArgument.Values</span> will be <span class="code">{ "First value of the main argument", "Second value of the main argument"}</span></li><li><span class="code">nullArgument</span> will be <span class="code">null</span></li></ul></div></td>
            </tr>
            <tr>
              <td>
                <img src="../icons/pubMethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <span class="noLink">GetHashCode</span>
              </td>
              <td>Serves as the default hash function.<br />(Inherited from <span class="noLink">Object</span>)</td>
            </tr>
            <tr>
              <td>
                <img src="../icons/pubMethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="01f914d5-c63c-caea-3d5e-9cb386efec18.htm">GetMainArgument</a>
              </td>
              <td>
            Get the main <span class="code"><a href="a137e4a8-1b7e-1e57-beed-730b64840040.htm">YArgument</a></span> or <span class="code">null</span> if not found.
            </td>
            </tr>
            <tr>
              <td>
                <img src="../icons/pubMethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <span class="noLink">GetType</span>
              </td>
              <td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td>
            </tr>
            <tr>
              <td>
                <img src="../icons/pubMethod.gif" alt="Public method" title="Public method" />
                <img src="../icons/CodeExample.png" alt="Code example" title="Code example" />
              </td>
              <td>
                <a href="75880905-8125-ace5-68f3-814b97d4437d.htm">HasArgument(String)</a>
              </td>
              <td>
            Check if the <span class="parameter">argName</span> is set.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDIBJDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDIBJDA', event)" tabindex="0"><img id="IDDIBJDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDDIBJDASection" class="collapsibleSection"><div id="IDADIBJDA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADIBJDA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADIBJDA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADIBJDA');return false;" title="Copy">Copy</a></div></div><div id="IDADIBJDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});</pre></div></div></div>
            In results :
            <ul><li><span class="code">argumentParser.HasArgument(string.Empty)</span> will return <span class="code">true</span> because it has main argument</li><li><span class="code">argumentParser.HasArgument("s")</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.HasArgument("readonly")</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.HasArgument("m")</span> will return <span class="code">false</span></li></ul></div></td>
            </tr>
            <tr>
              <td>
                <img src="../icons/pubMethod.gif" alt="Public method" title="Public method" />
                <img src="../icons/CodeExample.png" alt="Code example" title="Code example" />
              </td>
              <td>
                <a href="ff4ad280-4b84-af9b-29cc-f3079f5fe81b.htm">HasArgument<span id="LST7802D839_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST7802D839_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(T)</a>
              </td>
              <td>
            Check if the enum value <span class="parameter">argName</span> is set.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDJAJDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDJAJDA', event)" tabindex="0"><img id="IDDJAJDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDDJAJDASection" class="collapsibleSection"><div id="IDADJAJDA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADJAJDA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADJAJDA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADJAJDA');return false;" title="Copy">Copy</a></div></div><div id="IDADJAJDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">enum</span> ArumentsTypes
{
    main = <span class="highlight-number">0</span>,
    s,
    m,
    <span class="highlight-keyword">readonly</span>,
}
YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});</pre></div></div></div>
            In results :
            <ul><li><span class="code">argumentParser.ArgumentIsSet(ArumentsTypes.main)</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.HasArgument(ArumentsTypes.s)</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.HasArgument(ArumentsTypes.readonly)</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.HasArgument(ArumentsTypes.m)</span> will return <span class="code">false</span></li></ul></div></td>
            </tr>
            <tr>
              <td>
                <img src="../icons/pubMethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <span class="noLink">ToString</span>
              </td>
              <td>Returns a string that represents the current object.<br />(Inherited from <span class="noLink">Object</span>)</td>
            </tr>
          </table>
          <a href="#PageHeader">Top</a>
        </div>
        <div class="collapsibleAreaRegion">
          <span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDADA')" onkeypress="SectionExpandCollapse_CheckKey('IDADA', event)" tabindex="0">
            <img id="IDADAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span>
        </div>
        <div id="IDADASection" class="collapsibleSection">
          <table id="ExtensionList" class="members">
            <tr>
              <th class="iconColumn"> </th>
              <th>Name</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>
                <img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" />
              </td>
              <td>
                <a href="7618d5c0-b071-e953-b1ac-710d6cbb253a.htm">GetMD5HashCode</a>
              </td>
              <td>
            Get the MD5 Hash code of an <span class="code"><span class="noLink">Object</span><span class="parameter">obj</span></span> as a string.
            <br />(Defined by <a href="0e8d9a67-1a8f-6141-78c0-d67bd235a15d.htm">YObjectExtentionMethods</a>)</td>
            </tr>
            <tr>
              <td>
                <img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" />
              </td>
              <td>
                <a href="ee4cc810-5641-f5d0-70f2-39ec93449ff5.htm">SerializeObject</a>
              </td>
              <td>
            Serialize an <span class="code"><span class="noLink">Object</span><span class="parameter">toSerialize</span></span>.
            <br />(Defined by <a href="c5fbac5d-4260-89f3-a9f6-2d8d2b7fc6f6.htm">YSerializationCenter</a>)</td>
            </tr>
          </table>
          <a href="#PageHeader">Top</a>
        </div>
        <div class="collapsibleAreaRegion">
          <span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0">
            <img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span>
        </div>
        <div id="seeAlsoSection" class="collapsibleSection">
          <h4>Reference</h4>
          <div>
            <a href="f128f663-181c-2ce8-79e1-ce4c6a40fc6a.htm">YArgumentParser Class</a>
          </div>
          <div>
            <a href="d5af3b36-2b58-62a2-cdc7-35f92a837cae.htm">Upsilon.Common.Library Namespace</a>
          </div>
        </div>
      </div>
    </div>
    <div id="PageFooter" class="pageFooter" />
  </body>
</html>