<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="Microsoft.Help.SelfBranded" content="true" />
    <meta name="Language" content="en-us" />
    <meta name="Microsoft.Help.Locale" content="en-us" />
    <meta name="Microsoft.Help.TopicLocale" content="en-us" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"></script>
    <title>YArgumentParser Class</title>
    <meta name="Title" content="YArgumentParser Class" />
    <meta name="Microsoft.Help.Id" content="T:Upsilon.Common.Library.YArgumentParser" />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="System.Keywords" content="Upsilon.Common.Library.YArgumentParser class" />
    <meta name="System.Keywords" content="YArgumentParser class" />
    <meta name="Microsoft.Help.F1" content="Upsilon.Common.Library.YArgumentParser" />
    <meta name="Microsoft.Help.F1" content="YArgumentParser" />
    <meta name="container" content="Upsilon.Common.Library" />
    <meta name="file" content="f128f663-181c-2ce8-79e1-ce4c6a40fc6a" />
    <meta name="guid" content="f128f663-181c-2ce8-79e1-ce4c6a40fc6a" />
    <meta name="Microsoft.Help.Category" content="CSharp" />
    <meta name="Description" content="The Upsilon Ecosystem argument parsing engine." />
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="SetDefaultLanguage('cs');">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div id="PageHeader" class="pageHeader">Upsilon.Common Documentation<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/15f31622-7bc3-29c8-a7b5-90b3ac6b173c.htm" title="Upsilon.Common Documentation" tocid="roottoc">Upsilon.Common Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/15f31622-7bc3-29c8-a7b5-90b3ac6b173c.htm" title="Upsilon.Common Documentation" tocid="15f31622-7bc3-29c8-a7b5-90b3ac6b173c">Upsilon.Common Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/d5af3b36-2b58-62a2-cdc7-35f92a837cae.htm" title="Upsilon.Common.Library" tocid="d5af3b36-2b58-62a2-cdc7-35f92a837cae">Upsilon.Common.Library</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/f128f663-181c-2ce8-79e1-ce4c6a40fc6a.htm" title="YArgumentParser Class" tocid="f128f663-181c-2ce8-79e1-ce4c6a40fc6a">YArgumentParser Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/198e3fd4-ffa6-d341-50fa-3f75ec509672.htm" title="YArgumentParser Constructor" tocid="198e3fd4-ffa6-d341-50fa-3f75ec509672">YArgumentParser Constructor</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/be053c9c-04fd-3bce-6970-4714e9e1a4d3.htm" title="YArgumentParser Properties" tocid="be053c9c-04fd-3bce-6970-4714e9e1a4d3">YArgumentParser Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/eaa40178-25e2-f344-648d-934d1ce9542b.htm" title="YArgumentParser Methods" tocid="eaa40178-25e2-f344-648d-934d1ce9542b">YArgumentParser Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/9eb892fa-56ad-8a51-a22b-b86877207392.htm" title="YArgumentParser Fields" tocid="9eb892fa-56ad-8a51-a22b-b86877207392">YArgumentParser Fields</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">
              <h1>YArgument<wbr />Parser Class</h1>
            </td>
          </tr>
        </table>
        <div class="summary">
            The Upsilon Ecosystem argument parsing engine.
            </div>
        <div class="collapsibleAreaRegion">
          <span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDA', event)" tabindex="0">
            <img id="IDDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span>
        </div>
        <div id="IDDASection" class="collapsibleSection">
          <span class="noLink">System<span id="LSTAD0BC94E_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Object</span>
          <br />  <span class="selflink">Upsilon.Common.Library<span id="LSTAD0BC94E_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>YArgumentParser</span><br /></div>
        <br />
        <strong>Namespace:</strong> <a href="d5af3b36-2b58-62a2-cdc7-35f92a837cae.htm">Upsilon.Common.Library</a><br /><strong>Assembly:</strong> Upsilon.Common.Library (in Upsilon.Common.Library.dll) Version: 2.2.2+14985a67b419f90e14e6b1bde61d18cf6cf12b27<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">YArgumentParser</span></pre></div></div></div></div><p>The <span class="selflink">YArgumentParser</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDAHEA')" onkeypress="SectionExpandCollapse_CheckKey('IDAHEA', event)" tabindex="0"><img id="IDAHEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="IDAHEASection" class="collapsibleSection"><table id="ConstructorList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="876fe944-7216-ed56-2deb-17addf357a3f.htm">YArgumentParser(String)</a></td><td>
            Create a new argument parser engine from an argument string.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBGAHEA')" onkeypress="SectionExpandCollapse_CheckKey('IDBGAHEA', event)" tabindex="0"><img id="IDBGAHEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDBGAHEASection" class="collapsibleSection"><div id="IDABGAHEA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDABGAHEA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDABGAHEA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDABGAHEA');return false;" title="Copy">Copy</a></div></div><div id="IDABGAHEA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-literal">"\"First value of the main argument\" \"Second value of the main argument\" -s source /d destination -readonly"</span>);</pre></div></div></div>
            In results, <span class="code">argumentParser</span> will have 4 arguments : 
            <ul><li>the main argument which has 2 values</li><li><span class="code">s</span> argument which has <span class="code">source</span> as value</li><li><span class="code">d</span> argument which has <span class="code">destination</span> as value</li><li><span class="code">readonly</span> argument which is set as boolean</li></ul></div></td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="012e17f8-f18c-bd55-fbc0-8a9aefb437bf.htm">YArgumentParser(<span id="LSTAD0BC94E_2" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LSTAD0BC94E_3" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Create a new argument parser engine from an argument list.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBGBHEA')" onkeypress="SectionExpandCollapse_CheckKey('IDBGBHEA', event)" tabindex="0"><img id="IDBGBHEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDBGBHEASection" class="collapsibleSection"><div id="IDABGBHEA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDABGBHEA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDABGBHEA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDABGBHEA');return false;" title="Copy">Copy</a></div></div><div id="IDABGBHEA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});</pre></div></div></div>
            In results, <span class="code">argumentParser</span> will have 4 arguments : 
            <ul><li>the main argument which has 2 values</li><li><span class="code">s</span> argument which has <span class="code">source</span> as value</li><li><span class="code">d</span> argument which has <span class="code">destination</span> as value</li><li><span class="code">readonly</span> argument which is set as boolean</li></ul></div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDOEA')" onkeypress="SectionExpandCollapse_CheckKey('IDOEA', event)" tabindex="0"><img id="IDOEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="IDOEASection" class="collapsibleSection"><table id="PropertyList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="cbc3599e-585f-d39d-8327-b6b62c6869bc.htm">Args</a></td><td>
            Get the argument list as a list of string.
            </td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="42ec97bf-0703-791a-c26d-197c80013bd0.htm">ArgsLine</a></td><td>
            Get the argument list as a string line.
            </td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="bc44effb-1f3f-ab3e-4dda-e306c78f0d4b.htm">Arguments</a></td><td>
            Get the list of <span class="code"><a href="a137e4a8-1b7e-1e57-beed-730b64840040.htm">YArgument</a></span> parsed by the engine.
            </td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="0eea6d9f-5153-9706-273c-480678a0e63c.htm">Item<span id="LSTAD0BC94E_4" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>Enum<span id="LSTAD0BC94E_5" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Get a <span class="code"><a href="a137e4a8-1b7e-1e57-beed-730b64840040.htm">YArgument</a></span> from the <span class="parameter">argName</span> or <span class="code">null</span> if the given param is not found.
            </td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="3111d328-64ba-685e-e23f-2f6d766d4c64.htm">Item<span id="LSTAD0BC94E_6" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>Int32<span id="LSTAD0BC94E_7" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Get the string argument at the given index.
            </td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="082db68f-c4de-f594-bde6-acdf83078da5.htm">Item<span id="LSTAD0BC94E_8" data-languageSpecificText="cs=[|vb=(|cpp=[|nu=(|fs= "></span>String<span id="LSTAD0BC94E_9" data-languageSpecificText="cs=]|vb=)|cpp=]|nu=)|fs= "></span></a></td><td>
            Get a <span class="code"><a href="a137e4a8-1b7e-1e57-beed-730b64840040.htm">YArgument</a></span> from the <span class="parameter">argName</span> or <span class="code">null</span> if the given param is not found.
            </td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDEA')" onkeypress="SectionExpandCollapse_CheckKey('IDDEA', event)" tabindex="0"><img id="IDDEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDDEASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="60e6b740-d3d4-211a-2b5f-896304e42c93.htm">ArgumentIsSet(String)</a></td><td>
            Check if the <span class="parameter">argName</span> is set as a boolean.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDIBIEA')" onkeypress="SectionExpandCollapse_CheckKey('IDDIBIEA', event)" tabindex="0"><img id="IDDIBIEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDDIBIEASection" class="collapsibleSection"><div id="IDADIBIEA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADIBIEA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADIBIEA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADIBIEA');return false;" title="Copy">Copy</a></div></div><div id="IDADIBIEA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});</pre></div></div></div>
            In results :
            <ul><li><span class="code">argumentParser.ArgumentIsSet(string.Empty)</span> will return <span class="code">false</span> because the main argument cannot be set as boolean</li><li><span class="code">argumentParser.ArgumentIsSet("s")</span> will return <span class="code">false</span> because this argument is not set as boolean</li><li><span class="code">argumentParser.ArgumentIsSet("readonly")</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.ArgumentIsSet("override")</span> will return <span class="code">false</span></li></ul></div></td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="39a3e157-68f9-a661-15d8-c3efe1bb724b.htm">ArgumentIsSet<span id="LSTAD0BC94E_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTAD0BC94E_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(T)</a></td><td>
            Check if the <span class="parameter">argName</span> is set as a boolean.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDJAIEA')" onkeypress="SectionExpandCollapse_CheckKey('IDDJAIEA', event)" tabindex="0"><img id="IDDJAIEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDDJAIEASection" class="collapsibleSection"><div id="IDADJAIEA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADJAIEA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADJAIEA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADJAIEA');return false;" title="Copy">Copy</a></div></div><div id="IDADJAIEA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">enum</span> ArumentsTypes
{
    main = <span class="highlight-number">0</span>,
    s,
    m,
    <span class="highlight-keyword">readonly</span>,
}
YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});</pre></div></div></div>
            In results :
            <ul><li><span class="code">argumentParser.ArgumentIsSet(ArumentsTypes.main)</span> will return <span class="code">false</span> because the main argument cannot be set as boolean</li><li><span class="code">argumentParser.ArgumentIsSet(ArumentsTypes.s)</span> will return <span class="code">false</span> because this argument is not set as boolean</li><li><span class="code">argumentParser.ArgumentIsSet(ArumentsTypes.readonly)</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.ArgumentIsSet(ArumentsTypes.m)</span> will return <span class="code">false</span></li></ul></div></td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="8b781379-64e2-cefd-1ca2-da6c53c55682.htm">GetArgument(String)</a></td><td>
            Get a <span class="code"><a href="a137e4a8-1b7e-1e57-beed-730b64840040.htm">YArgument</a></span> from the <span class="parameter">argName</span>. Throw a KeyNotFoundException if the given param is not found.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFIBJEA')" onkeypress="SectionExpandCollapse_CheckKey('IDFIBJEA', event)" tabindex="0"><img id="IDFIBJEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDFIBJEASection" class="collapsibleSection"><div id="IDAFIBJEA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAFIBJEA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAFIBJEA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAFIBJEA');return false;" title="Copy">Copy</a></div></div><div id="IDAFIBJEA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});
YArgument argument = argumentParser.GetArgument(<span class="highlight-literal">"s"</span>);
YArgument mainArgument = argumentParser.GetArgument(<span class="highlight-keyword">string</span>.Empty);
YArgument nullArgument = argumentParser.GetArgument(<span class="highlight-literal">"m"</span>);</pre></div></div></div>
            In results :
            <ul><li><span class="code">argument.Values</span> will be <span class="code">{ "source" }</span></li><li><span class="code">mainArgument.Values</span> will be <span class="code">{ "First value of the main argument", "Second value of the main argument"}</span></li><li><span class="code">nullArgument</span> will be <span class="code">null</span></li></ul></div></td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="ee8e8af0-9a6d-5ced-37b2-9eb172ef64af.htm">GetArgument<span id="LSTAD0BC94E_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTAD0BC94E_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(T)</a></td><td>
            Get a <span class="code"><a href="a137e4a8-1b7e-1e57-beed-730b64840040.htm">YArgument</a></span> from the <span class="parameter">argName</span>. Throw a KeyNotFoundException if the given param is not found.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFJAJEA')" onkeypress="SectionExpandCollapse_CheckKey('IDFJAJEA', event)" tabindex="0"><img id="IDFJAJEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDFJAJEASection" class="collapsibleSection"><div id="IDAFJAJEA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAFJAJEA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAFJAJEA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAFJAJEA');return false;" title="Copy">Copy</a></div></div><div id="IDAFJAJEA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">enum</span> ArumentsTypes
{
    main = <span class="highlight-number">0</span>,
    s,
    m,
    <span class="highlight-keyword">readonly</span>,
}
YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});
YArgument argument = argumentParser.GetArgument(ArumentsTypes.s);
YArgument mainArgument = argumentParser.GetArgument(ArumentsTypes.main);
YArgument nullArgument = argumentParser.GetArgument(ArumentsTypes.m);</pre></div></div></div>
            In results :
            <ul><li><span class="code">argument.Values</span> will be <span class="code">{ "source" }</span></li><li><span class="code">mainArgument.Values</span> will be <span class="code">{ "First value of the main argument", "Second value of the main argument"}</span></li><li><span class="code">nullArgument</span> will be <span class="code">null</span></li></ul></div></td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="01f914d5-c63c-caea-3d5e-9cb386efec18.htm">GetMainArgument</a></td><td>
            Get the main <span class="code"><a href="a137e4a8-1b7e-1e57-beed-730b64840040.htm">YArgument</a></span> or <span class="code">null</span> if not found.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="75880905-8125-ace5-68f3-814b97d4437d.htm">HasArgument(String)</a></td><td>
            Check if the <span class="parameter">argName</span> is set.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDIBLEA')" onkeypress="SectionExpandCollapse_CheckKey('IDDIBLEA', event)" tabindex="0"><img id="IDDIBLEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDDIBLEASection" class="collapsibleSection"><div id="IDADIBLEA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADIBLEA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADIBLEA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADIBLEA');return false;" title="Copy">Copy</a></div></div><div id="IDADIBLEA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});</pre></div></div></div>
            In results :
            <ul><li><span class="code">argumentParser.HasArgument(string.Empty)</span> will return <span class="code">true</span> because it has main argument</li><li><span class="code">argumentParser.HasArgument("s")</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.HasArgument("readonly")</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.HasArgument("m")</span> will return <span class="code">false</span></li></ul></div></td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="ff4ad280-4b84-af9b-29cc-f3079f5fe81b.htm">HasArgument<span id="LSTAD0BC94E_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTAD0BC94E_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(T)</a></td><td>
            Check if the enum value <span class="parameter">argName</span> is set.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDJALEA')" onkeypress="SectionExpandCollapse_CheckKey('IDDJALEA', event)" tabindex="0"><img id="IDDJALEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDDJALEASection" class="collapsibleSection"><div id="IDADJALEA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDADJALEA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDADJALEA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDADJALEA');return false;" title="Copy">Copy</a></div></div><div id="IDADJALEA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">enum</span> ArumentsTypes
{
    main = <span class="highlight-number">0</span>,
    s,
    m,
    <span class="highlight-keyword">readonly</span>,
}
YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});</pre></div></div></div>
            In results :
            <ul><li><span class="code">argumentParser.ArgumentIsSet(ArumentsTypes.main)</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.HasArgument(ArumentsTypes.s)</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.HasArgument(ArumentsTypes.readonly)</span> will return <span class="code">true</span></li><li><span class="code">argumentParser.HasArgument(ArumentsTypes.m)</span> will return <span class="code">false</span></li></ul></div></td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="3d731928-6522-dfb3-a716-4759a6b22e30.htm">RegisterArgumentNameSet(<span id="LSTAD0BC94E_16" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LSTAD0BC94E_17" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Register an Argument name set.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="8ba7698d-c601-762e-4050-d3bdef9d6834.htm">RegisterArgumentNameSet<span id="LSTAD0BC94E_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTAD0BC94E_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(<span id="LSTAD0BC94E_20" data-languageSpecificText="cpp=array&lt;"></span>T<span id="LSTAD0BC94E_21" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Register an Argument name set.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><span class="noLink">ToString</span></td><td>Returns a string that represents the current object.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="509a5314-f948-72f0-02b6-93342f95e973.htm">TryGetArgument(String)</a></td><td>
            Try to get a <span class="code"><a href="a137e4a8-1b7e-1e57-beed-730b64840040.htm">YArgument</a></span> from the <span class="parameter">argName</span> or <span class="code">null</span> if the given param is not found.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDHIANEA')" onkeypress="SectionExpandCollapse_CheckKey('IDHIANEA', event)" tabindex="0"><img id="IDHIANEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDHIANEASection" class="collapsibleSection"><div id="IDAHIANEA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAHIANEA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAHIANEA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAHIANEA');return false;" title="Copy">Copy</a></div></div><div id="IDAHIANEA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});
YArgument argument = argumentParser.GetArgument(<span class="highlight-literal">"s"</span>);
YArgument mainArgument = argumentParser.GetArgument(<span class="highlight-keyword">string</span>.Empty);
YArgument nullArgument = argumentParser.GetArgument(<span class="highlight-literal">"m"</span>);</pre></div></div></div>
            In results :
            <ul><li><span class="code">argument.Values</span> will be <span class="code">{ "source" }</span></li><li><span class="code">mainArgument.Values</span> will be <span class="code">{ "First value of the main argument", "Second value of the main argument"}</span></li><li><span class="code">nullArgument</span> will be <span class="code">null</span></li></ul></div></td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="43836a2f-eedb-19d0-9fce-2e87a99085eb.htm">TryGetArgument<span id="LSTAD0BC94E_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTAD0BC94E_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(T)</a></td><td>
            Try to get a <span class="code"><a href="a137e4a8-1b7e-1e57-beed-730b64840040.htm">YArgument</a></span> from the <span class="parameter">argName</span> or <span class="code">null</span> if the given param is not found.
            <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDHJBNEA')" onkeypress="SectionExpandCollapse_CheckKey('IDHJBNEA', event)" tabindex="0"><img id="IDHJBNEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDHJBNEASection" class="collapsibleSection"><div id="IDAHJBNEA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAHJBNEA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAHJBNEA_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAHJBNEA');return false;" title="Copy">Copy</a></div></div><div id="IDAHJBNEA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">enum</span> ArumentsTypes
{
    main = <span class="highlight-number">0</span>,
    s,
    m,
    <span class="highlight-keyword">readonly</span>,
}
YArgumentParser argumentParser = <span class="highlight-keyword">new</span> YArgumentParser(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[]
{ 
    <span class="highlight-literal">"First value of the main argument"</span>,
    <span class="highlight-literal">"Second value of the main argument"</span>,
    <span class="highlight-literal">"-s"</span>,
    <span class="highlight-literal">"source"</span>,
    <span class="highlight-literal">"/d"</span>,
    <span class="highlight-literal">"destination"</span>,
    <span class="highlight-literal">"-readonly"</span>
});
YArgument argument = argumentParser.GetArgument(ArumentsTypes.s);
YArgument mainArgument = argumentParser.GetArgument(ArumentsTypes.main);
YArgument nullArgument = argumentParser.GetArgument(ArumentsTypes.m);</pre></div></div></div>
            In results :
            <ul><li><span class="code">argument.Values</span> will be <span class="code">{ "source" }</span></li><li><span class="code">mainArgument.Values</span> will be <span class="code">{ "First value of the main argument", "Second value of the main argument"}</span></li><li><span class="code">nullArgument</span> will be <span class="code">null</span></li></ul></div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCEA')" onkeypress="SectionExpandCollapse_CheckKey('IDCEA', event)" tabindex="0"><img id="IDCEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Fields</span></div><div id="IDCEASection" class="collapsibleSection"><table id="FieldList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubField.gif" alt="Public field" title="Public field" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="b798ebec-1779-5f37-f171-c9ef5fd473db.htm">ArgModifiers</a></td><td>
            Get the list of argument modifiers :
            <ul><li>the dash '-'</li><li>the slash '/'</li></ul></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDAEA')" onkeypress="SectionExpandCollapse_CheckKey('IDAEA', event)" tabindex="0"><img id="IDAEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="IDAEASection" class="collapsibleSection"><table id="ExtensionList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="7618d5c0-b071-e953-b1ac-710d6cbb253a.htm">GetMD5HashCode</a></td><td>
            Get the MD5 Hash code of an <span class="code"><span class="noLink">Object</span><span class="parameter">obj</span></span> as a string.
            <br />(Defined by <a href="0e8d9a67-1a8f-6141-78c0-d67bd235a15d.htm">YObjectExtentionMethods</a>)</td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="ee4cc810-5641-f5d0-70f2-39ec93449ff5.htm">SerializeObject</a></td><td>
            Serialize an <span class="code"><span class="noLink">Object</span><span class="parameter">toSerialize</span></span>.
            <br />(Defined by <a href="c5fbac5d-4260-89f3-a9f6-2d8d2b7fc6f6.htm">YSerializationCenter</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="d5af3b36-2b58-62a2-cdc7-35f92a837cae.htm">Upsilon.Common.Library Namespace</a></div><div><a href="a137e4a8-1b7e-1e57-beed-730b64840040.htm">YArgument</a></div></div></div>
    </div>
    <div id="PageFooter" class="pageFooter">
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:contact%40yassinlokhat.com?Subject=Upsilon.Common%20Documentation">contact@yassinlokhat.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div>
  </body>
</html>